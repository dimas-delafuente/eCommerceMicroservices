version: '3.4'

services:
  catalogdb:
    container_name: catalogdb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  basketdb:
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"

  discountdb:
    container_name: discountdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin_postgres
      - POSTGRES_DB=DiscountDb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  
  orderdb:
    container_name: orderdb
    environment:
      SA_PASSWORD: "SwN12345678"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - "1433:1433"

  idempotencydb:
    container_name: idempotencydb
    environment:
      SA_PASSWORD: "SwN12345678"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - "1434:1434"

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672"

  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=devlafuente@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=admin_pgadmin
    restart: always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "DatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
      - "IdempotencyDbSettings:ConnectionString=Server=idempotencydb;Database=IdempotencyDb;User Id=sa;Password=SwN12345678;TrustServerCertificate=True"  
    depends_on:
      - catalogdb
      - idempotencydb
    ports:
      - "8000:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "CacheSettings:ConnectionString=basketdb:6379"
      - "DiscountGrpcSettings:DiscountUrl=http://discount.grpc"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
      - basketdb
      - rabbitmq
    ports:
      - "8001:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  discount.api:
    container_name: discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin_postgres;"
    depends_on:
      - discountdb
    ports:
      - "8002:80"

  discount.grpc:
    container_name: discount.grpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin_postgres;"
    depends_on:
      - discountdb
    ports:
      - "8003:80"

  orders.api:
    container_name: orders.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=SwN12345678;TrustServerCertificate=True"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
      - orderdb
      - rabbitmq
    ports:
      - "8004:80"

  ocelotapigateway:
    container_name: ocelotapigw
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - catalog.api
      - basket.api
      - discount.api
      - orders.api
    ports:
      - "8010:80"

  elasticsearch:
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    container_name: kibana
    restart: always
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch